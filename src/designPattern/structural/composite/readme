
https://www.digitalocean.com/community/tutorials/composite-design-pattern-in-java



Composite pattern is used where we need to treat a group of objects in similar
 way as a single object. Composite pattern composes objects in term of a tree
 structure to represent part as well as whole hierarchy.
 This type of design pattern comes under structural pattern as this pattern creates
 a tree structure of group of objects.

This pattern creates a class that contains group of its own objects.
This class provides ways to modify its group of same objects.


component – is the base interface for all the objects in the composition.
It should be either an interface or an abstract class with the common methods
to manage the child composites.
leaf – implements the default behavior of the base component.
It doesn't contain a reference to the other objects.
composite – has leaf elements. It implements the base component methods and defines
the child-related operations.
client – has access to the composition elements by using the base component object.
